package default_package;
import java.util.List;
import java.util.Scanner;


import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;


public class ConsultationClient {

    public static void main(String[] args) {

        JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();        

        // Use the URL defined in the soap address portion of the WSDL
        factory.setAddress("http://localhost:8080/ConsultationWebSOAP/services/ConsultationUtilityPort"); 
       
        // Utilize the class which was auto-generated by Apache CXF wsdl2java
        factory.setServiceClass(ConsultationUtility.class);        

        Object client = factory.create(); 

        try {        
    
            Scanner scanner = new Scanner(System.in);
            boolean isRunning = true; 

            System.out.println("Bem-vindo ao Sistema de Consultas!");

            while (isRunning) { 
                boolean isLoggedIn = false;
                int userId = -1;

                // Menu inicial para login ou registo
                while (!isLoggedIn && isRunning) {
                    System.out.println("\n--- Menu Inicial ---");
                    System.out.println("1. Fazer Login");
                    System.out.println("2. Registar Conta");
                    System.out.println("3. Sair");
                    System.out.print("Escolha uma opção: ");
                    String choice = scanner.next();
                    scanner.nextLine(); 

                    switch (choice) {
                        case "1":
                            // Login
                            System.out.print("Email: ");
                            String email = scanner.nextLine();
                            System.out.print("Password: ");
                            String password = scanner.nextLine();

                            
                            List<String> resposta = ((ConsultationUtility)client).loginUser(email,password);
                            String userIdString = resposta.get(0); 
                            
                            System.out.println("IdString: " + userIdString);

                            userId = Integer.parseInt(userIdString);
                            System.out.println("Id: " + userId);

                            if (userId != -1) {
                                System.out.println("Login realizado com sucesso!");
                                System.out.println("Id: " + userId);
                                isLoggedIn = true;
                            }else {
                            	String loginMessage = resposta.get(1); 
                            	System.out.println(loginMessage);
                            }
                            break;

                        case "2":
                            // Registo
                            System.out.print("Email: ");
                            String newEmail = scanner.nextLine();
                            
                            System.out.print("Password: ");
                            String newPassword = scanner.nextLine();

                            String registrationResult = ((ConsultationUtility)client).registarUser(newEmail,newPassword);
                            System.out.println(registrationResult);
                            break;

                        case "3":
                            // Sair do programa
                            System.out.println("A encerrar o programa...");
                            isRunning = false;
                            break;

                        default:
                            System.out.println("Opção inválida. Por favor, tente novamente.");
                            break;
                    }
                }

               
                while (isLoggedIn && isRunning) {
                    System.out.println("\n--- Menu de Consultas ---");
                    System.out.println("1. Marcar uma consulta");
                    System.out.println("2. Listar todas as consultas");
                    System.out.println("3. Remarcar uma consulta");
                    System.out.println("4. Remover uma consulta");
                    System.out.println("5. Sair");
                    System.out.print("Escolha uma opção: ");

                    String option = scanner.next();
                    scanner.nextLine();
                    String respostaServidor = "";

                    switch (option) {
                        case "1":
                            // Marcar consulta
                            System.out.print("Nome da Clínica: ");
                            String novaClinica = scanner.nextLine();

                            System.out.print("Especialidade: ");
                            String novaEspecialidade = scanner.nextLine();

                            System.out.print("Data e Hora (YYYY-MM-DD HH:MM): ");
                            String novaData = scanner.nextLine();

                            respostaServidor = ((ConsultationUtility)client).reservarConsulta(novaClinica, novaEspecialidade, novaData, userId);
                            System.out.println(respostaServidor);
                            break;

                        case "2":
                            // Listar consultas
                            List<String> consultas = ((ConsultationUtility)client).listarConsultas(userId);
                            System.out.println("\n---| Consultas |---");

                            if (consultas.isEmpty()) {
                                System.out.println("Não tem nenhuma consulta agendada.");
                            }

                            for (String consulta : consultas) {
                                System.out.println(consulta);
                            }
                            break;

                        case "3":
                            // Remarcar consulta
                            System.out.print("ID da Consulta a ser atualizada: ");
                            int consultaId = scanner.nextInt();
                            scanner.nextLine(); // Consumir quebra de linha

                            System.out.print("Nova Data e Hora (YYYY-MM-DD HH:MM): ");
                            String novaDataAtualizada = scanner.nextLine();

                            respostaServidor = ((ConsultationUtility)client).updateConsulta(consultaId, novaDataAtualizada , userId);
                            System.out.println(respostaServidor);
                            break;

                        case "4":
                            // Desmarcar consulta
                            System.out.print("ID da Consulta a ser removida: ");
                            int consultaRemoverId = scanner.nextInt();

                            respostaServidor = ((ConsultationUtility)client).cancelarConsulta(consultaRemoverId, userId);
                            System.out.println(respostaServidor);
                            break;

                        case "5":
                            // Voltar ao menu inicial
                            System.out.println("Terminando sessão e voltando ao menu inicial...");
                            isLoggedIn = false; 
                            break;

                        default:
                            System.out.println("Opção inválida. Por favor, tente novamente.");
                            break;
                    }
                }
            }

            scanner.close();
          
          
          } catch (SecurityException e) {

            e.printStackTrace();

          } catch (IllegalArgumentException e) {

            e.printStackTrace();

          } catch (Exception e) {
              System.out.println("Erro no cliente RMI: " + e);
              e.printStackTrace();
          }
    }
}